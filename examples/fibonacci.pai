#Calculate a bunch of numbers in the fibonacci sequence.
#See how, since the subroutine is memoized,
#results are generated very quickly, even though the
#recursive implementation is well-known for its slowness.

for n in {0:100} do
    print "fib({n}) = {\fibonacci(n)}"
end

#Remove `cache` to see how slow this subroutine can be.
cache subroutine fibonacci
    if {@1 < 2} then return {@1} end
    return {\fibonacci(@1-1) + \fibonacci(@1-2)}
end
