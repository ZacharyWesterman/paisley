This is the Paisley compiler and runtime engine.
https://github.com/ZacharyWesterman/paisley

USAGE:
    paisley [FLAGS] <input> [<output>]

FLAGS:
    -h, --help             Prints help information
    -V, --version          Prints version information
    -r, --repl             Start the Paisley runtime as an interactive REPL
    -b, --bytecode         Output bytecode instead of running the script
    -p, --pretty           Pretty-print bytecode output
    -z, --compress         Compress bytecode output with zlib compression
        --dry-run          Validate the program, but don't run it
        --language-server  Output detailed info in an easy-to-parse format
        --stdin=[FILE]     Pretend that stdin input has the given filename
        --no-ast-errors    Don't report errors in the syntax tree
        --no-prune-dead-code Don't remove "dead code" that will never get run
        --no-shortcut      Don't allow `and` and `or` expressions to shortcut
        --tokens           Print all generated tokens and then exit
        --ast              Print the abstract syntax tree and then exit
        --ast-sem          Print the AST after semantic analysis and then exit
        --plasma           Restrict to only features available in the Plasma build
        --introspect       Print introspective data about the Paisley language
        --functions        If introspecting, list all functions
        --commands         If introspecting, list all commands
    -c[CMD]                Define an existing command on the target device
    -if[FUNC_NAME]         If introspecting, output details about the function
    -ic[CMD_NAME]          If introspecting, output details about the command
    -s, --standalone       Output a standalone program that can be run on
                           systems that don't have Paisley or Lua installed.
    -cs,--compress-standalone Compress the above standalone program if possible.
    -l, --shell            Allow unrecognized commands to coerce to shell exec

ARGS:
    <input>    The input file. Replace with `-` to read from stdin.
    <output>   The output file. Using this option implies the `-z` flag.

CMD Example:
    To define a command `status` which returns a value of type boolean:
        paisley -cstatus:boolean [FLAGS] <input>

    Return type must be one of `null`, `boolean`, `number`, `string`,
    `array` (or `array[string]`, `array[number]`, etc.) or `any`; or
    some combination, e.g. `array[string|number]`, `string|null`,
    `string?`, etc. If no return type is specified, `any` is assumed.

FUNC_NAME:
    Must be a valid function name or ALL.

CMD_NAME:
    Must be a valid command name or ALL.
